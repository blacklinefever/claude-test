import duckdb
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import letter
import os
from datetime import datetime

def create_test_pdf():
    """Create a PDF with test content"""
    filename = "eco_test.pdf"
    
    # Create PDF
    c = canvas.Canvas(filename, pagesize=letter)
    width, height = letter
    
    # Add the required text
    c.drawString(100, height - 100, "This is a test pdf")
    
    # Add some additional info
    c.drawString(100, height - 130, f"Created on: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    c.drawString(100, height - 160, "Generated by Python reportlab")
    
    c.save()
    print(f"PDF created: {filename}")
    return filename

def store_pdf_in_motherduck(filename):
    """Store PDF in MotherDuck as BLOB"""
    # Connect to MotherDuck
    conn = duckdb.connect('md:')
    
    # Read PDF file as binary
    with open(filename, 'rb') as f:
        pdf_data = f.read()
    
    # Create table for storing PDFs if it doesn't exist
    conn.execute("""
        CREATE TABLE IF NOT EXISTS pdf_storage (
            id INTEGER,
            filename VARCHAR,
            created_at TIMESTAMP,
            pdf_data BLOB
        )
    """)
    
    # Insert PDF data
    timestamp = datetime.now()
    conn.execute("""
        INSERT INTO pdf_storage (id, filename, created_at, pdf_data)
        VALUES (NULL, ?, ?, ?)
    """, (filename, timestamp, pdf_data))
    
    print(f"PDF stored in MotherDuck: {filename}")
    conn.close()

def list_stored_pdfs():
    """List all PDFs stored in MotherDuck"""
    conn = duckdb.connect('md:')
    
    try:
        result = conn.execute("""
            SELECT filename, created_at, octet_length(pdf_data) as size_bytes
            FROM pdf_storage
            ORDER BY created_at DESC
        """).fetchall()
        
        print("\nStored PDFs in MotherDuck:")
        print("-" * 50)
        for row in result:
            filename, created_at, size = row
            print(f"File: {filename}")
            print(f"Created: {created_at}")
            print(f"Size: {size} bytes")
            print("-" * 30)
            
    except Exception as e:
        print(f"No PDFs found or error: {e}")
    
    conn.close()

if __name__ == "__main__":
    # Create the PDF
    pdf_file = create_test_pdf()
    
    # Store in MotherDuck
    store_pdf_in_motherduck(pdf_file)
    
    # List stored PDFs
    list_stored_pdfs()